---
- hosts: db_servers
  become: true
  vars:
    # --- 변수 설정 ---

    db_root_password: "P@ssw0rd"
    db_name: "wordpress"
    db_user: "wordpress_user"
    db_password: "P@ssw0rd"
  tasks:
    # --- MariaDB, PHP, Nginx 패키지 일괄 설치 ---
    - name: Install all required packages
      ansible.builtin.apt:
        name:
          - mariadb-server
          - python3-mysqldb
        state: present
        update_cache: yes

    # --- MariaDB 비밀번호 강제 설정 (Bootstrap) ---
    - name: Stop MariaDB to enter bootstrap mode
      ansible.builtin.service:
        name: mariadb
        state: stopped
    - name: Create bootstrap config to disable grant tables
      ansible.builtin.copy:
        content: |
          [mysqld]
          skip-grant-tables
        dest: /etc/mysql/mariadb.conf.d/99-bootstrap.cnf
    - name: Start MariaDB in bootstrap mode
      ansible.builtin.service:
        name: mariadb
        state: started
    - name: Forcibly set the root password
      ansible.builtin.command: >
        mysql -u root -p{{ db_root_password }} -e "
        ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ db_root_password }}';
        FLUSH PRIVILEGES;"

      changed_when: true

    - name: Remove bootstrap config file
      ansible.builtin.file:
        path: /etc/mysql/mariadb.conf.d/99-bootstrap.cnf
        state: absent
    - name: Restart MariaDB in normal mode
      ansible.builtin.service:
        name: mariadb
        state: restarted

    # --- DB 및 사용자 생성 (이제 root 비밀번호로 접속) ---
    - name: Create the wordpress database
      community.mysql.mysql_db:
        name: "{{ db_name }}"
        state: present
        login_user: root
        login_password: "{{ db_root_password }}"
    - name: Create the wordpress database user
      community.mysql.mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: "{{ db_name }}.*:ALL"
        state: present
        login_user: root
        login_password: "{{ db_root_password }}"
